"use strict";!function(){var t=ax5.ui,e=ax5.util,i=void 0;t.addClass({className:"uploader",version:"${VERSION}"},function(){var n=function(){var n=this,o=void 0;this.instanceId=ax5.getGuid(),this.config={clickEventName:"click",theme:"default",lang:{upload:"Upload",abort:"Abort"},accept:"*/*",multiple:!1,manualUpload:!1,progressBox:!0},this.defaultBtns={upload:{label:this.config.lang.upload,theme:"btn-primary"},abort:{label:this.config.lang.abort,theme:this.config.theme}},this.uploadedFiles=[],this.$target=null,this.$inputContainer=null,this.$inputFile=null,this.$inputFileForm=null,this.$fileSelector=null,this.$dropZone=null,o=this.config;var s=function(t){var i=void 0;return ax5.info.supportFileApi&&("dataTransfer"in t?i=t.dataTransfer.files:"target"in t?i=t.target.files:t&&(i=t)),!!i&&(length in i?this.selectedFiles=e.toArray(i):this.selectedFiles=[i],o.progressBox&&h.call(this),void(o.manualUpload||this.send()))},r=function(){this.$fileSelector.off("click.ax5uploader").on("click.ax5uploader",function(){this.$inputFile.trigger("click")}.bind(this)),this.$inputFile.off("change.ax5uploader").on("change.ax5uploader",function(t){s.call(this,t)}.bind(this)),this.$progressBox.off("click.ax5uploader").on("click.ax5uploader","button",function(t){console.log("click btn")}.bind(this)),function(){return!1}.call(this)},a=function(){},l=function(t){var e=function(){var e=jQuery(window),i=jQuery(document.body),n={},s=6,r={},a={},l=void 0;n=this.$progressBox.parent().get(0)==this.$target.get(0)?this.$fileSelector.position():this.$fileSelector.offset(),r={width:this.$fileSelector.outerWidth(),height:this.$fileSelector.outerHeight()},a={winWidth:Math.max(e.width(),i.width()),winHeight:Math.max(e.height(),i.height()),width:this.$progressBox.outerWidth(),height:this.$progressBox.outerHeight()},o.direction&&""!==o.direction&&"auto"!==o.direction?l=o.direction:(l="top",n.top-a.height-s<0?l="top":n.top+r.height+a.height+s>a.winHeight&&(l="bottom")),t&&this.$progressBox.addClass("direction-"+l);var h=function(){var t={left:0,top:0};switch(l){case"top":t.left=n.left+r.width/2-a.width/2,t.top=n.top+r.height+s;break;case"bottom":t.left=n.left+r.width/2-a.width/2,t.top=n.top-a.height-s;break;case"left":t.left=n.left+r.width+s,t.top=n.top-a.height/2+r.height/2;break;case"right":t.left=n.left-a.width-s,t.top=n.top-a.height/2+r.height/2}return t}();(function(){"top"!=l&&"bottom"!=l||(h.left<0?(h.left=s,this.$progressBoxArrow.css({left:n.left+r.width/2-h.left})):h.left+a.width>a.winWidth&&(h.left=a.winWidth-a.width-s,this.$progressBoxArrow.css({left:n.left+r.width/2-h.left})))}).call(this),this.$progressBox.css(h)};this.$progressBox.css({top:-999}),t&&function(){return o.viewport?jQuery(o.viewport.selector):this.$target}.call(this).append(this.$progressBox),setTimeout(function(){e.call(this)}.bind(this))},h=function(){l.call(this,"append"),o.manualUpload};this.init=function(t){return o=jQuery.extend(!0,{},o,t),o.target?(this.$target=jQuery(o.target),o.dropZone&&(this.$dropZone=jQuery(o.dropZone)),function(t){e.isObject(t)&&!t.error&&(o=jQuery.extend(!0,o,t))}.call(this,e.parseJson(this.$target.attr("data-ax5uploader-config"),!0)),this.$inputContainer=jQuery('<div data-ax5uploader-input-container=""></div>'),this.$target.append(this.$inputContainer),this.$fileSelector=this.$target.find('[data-ax5uploader-button="selector"]'),0===this.$fileSelector.length?(console.log(ax5.info.getError("ax5uploader","402","can not find file selector")),this):(this.$inputFile=jQuery(i.tmpl.get.call(this,"inputFile",{instanceId:this.instanceId,multiple:o.multiple,accept:o.accept})),ax5.info.supportFileApi?jQuery(document.body).append(this.$inputFile):(this.$inputFileForm=jQuery(i.tmpl.get.call(this,"inputFileForm",{instanceId:this.instanceId})),this.$inputFileForm.append(this.$inputFile),jQuery(document.body).append(this.$inputFileForm)),o.btns=jQuery.extend({},this.defaultBtns,o.btns),this.$progressBox=jQuery(i.tmpl.get.call(this,"progressBox",{instanceId:this.instanceId,btns:o.btns})),this.$progressBoxArrow=this.$progressBox.find(".ax-progressbox-arrow"),a.call(this),void r.call(this))):(console.log(ax5.info.getError("ax5uploader","401","init")),this)},this.send=function(){var t=(function(t){this.$progressBox.css({width:e.number(t.loaded/t.total*100,{round:2})+"%"}),t.lengthComputable&&t.loaded>=t.total}.bind(n),function(t){console.log(t)}.bind(n)),i=(function(){}.bind(n),{html5:function(){var i=this.selectedFiles.shift();i||console.log("더 이상 업로드할 파일 없음.");var n=new FormData;this.$target.find("input").each(function(){n.append(this.name,this.value)}),n.append(o.form.fileName,i),this.xhr=new XMLHttpRequest,this.xhr.open("post",o.form.action,!0),this.xhr.onload=function(i){var n=i.target.response;try{"string"==typeof n&&(n=e.parseJson(n))}catch(i){return console.log(i),!1}return n.error?(console.log(n.error),!1):void t(n)},this.xhr.upload.onprogress=function(t){console.log(t.loaded,t.total)},this.xhr.send(n)},formSubmit:function(){var t=$('<iframe src="javascript:false;" name="" style="display:none;"></iframe>');$(document.body).append(t)}});return function(){i[ax5.info.supportFileApi?"html5":"formSubmit"].call(this)}}(),this.main=function(){t.uploader_instance=t.uploader_instance||[],t.uploader_instance.push(this),arguments&&e.isObject(arguments[0])&&this.setConfig(arguments[0])}.apply(this,arguments)};return n}()),i=ax5.ui.uploader}(),function(){var t=ax5.ui.uploader,e=function(t){return"\n        "},i=function(t){return'<input type="file" data-ax5uploader-input="{{instanceId}}" {{#multiple}}multiple{{/multiple}} accept="{{accept}}" />'},n=function(t){return'<form data-ax5uploader-form="{{instanceId}}" method="post" enctype="multipart/form-data"></form>'},o=function(t){return'\n<div data-ax5uploader-progressbox="{{instanceId}}" class="{{theme}}">\n    <div class="ax-progressbox-body">\n        <div class="ax-pregressbox-content">\n            <div class="progress">\n              <div class="progress-bar progress-bar-striped active" role="progressbar" style="width: 0">\n                <span class="sr-only">0% Complete</span>\n              </div>\n            </div>\n        </div>\n        {{#btns}}\n            <div class="ax-progressbox-buttons">\n            {{#btns}}\n                {{#@each}}\n                <button data-pregressbox-btn="{{@key}}" class="btn btn-default {{@value.theme}}">{{@value.label}}</button>\n                {{/@each}}\n            {{/btns}}\n            </div>\n        {{/btns}}\n    </div>\n    <div class="ax-progressbox-arrow"></div>\n</div>\n'};t.tmpl={uploadProgress:e,inputFile:i,inputFileForm:n,progressBox:o,get:function(e,i,n){return ax5.mustache.render(t.tmpl[e].call(this,n),i)}}}();
//# sourceMappingURL=ax5uploader.min.js.map
